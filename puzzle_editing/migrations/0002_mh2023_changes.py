# Generated by Django 3.1.13 on 2023-01-31 01:23

import django.core.validators
import django.db.migrations.operations.special
import django.db.models.deletion
import puzzle_editing.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('puzzle_editing', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='testsolvesession',
            name='discord_thread_id',
            field=models.CharField(blank=True, max_length=19),
        ),
        migrations.AddField(
            model_name='testsolvesession',
            name='google_sheets_id',
            field=models.CharField(blank=True, max_length=64),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='codename',
            field=models.CharField(default=puzzle_editing.models.generate_codename, help_text='A non-spoilery name. Feel free to use the autogenerated one.', max_length=500),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='status',
            field=models.CharField(choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], default='II', max_length=2),
        ),
        migrations.AlterField(
            model_name='puzzlecomment',
            name='status_change',
            field=models.CharField(blank=True, choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], help_text="Any status change caused by this comment. Only used for recording history and computing statistics; not a source of truth (i.e. the puzzle will still store its current status, and this field's value on any comment doesn't directly imply anything about that in any technically enforced way).", max_length=2),
        ),
        migrations.AlterField(
            model_name='statussubscription',
            name='status',
            field=models.CharField(choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], max_length=2),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='logistics_number_testsolvers',
            field=models.CharField(blank=True, max_length=512),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='logistics_specialized_type',
            field=models.CharField(blank=True, choices=[('PHY', 'Physical Puzzle'), ('EVE', 'Event'), ('', 'None of the Above')], max_length=3),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='logistics_testsolve_length',
            field=models.CharField(blank=True, max_length=512),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='logistics_testsolve_skills',
            field=models.CharField(blank=True, max_length=512),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='logistics_difficulty_factcheck',
            field=models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(2)]),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='logistics_difficulty_postprod',
            field=models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(2)]),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='logistics_difficulty_testsolve',
            field=models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(2)]),
        ),
        migrations.AddField(
            model_name='testsolveparticipation',
            name='general_feedback',
            field=models.TextField(blank=True, help_text='What did you like & dislike about this puzzle? Is there anything you think should be changed (e.g. amount of flavor/cluing, errata, tech issues, mechanics, theming, etc.)?', null=True),
        ),
        migrations.AddField(
            model_name='testsolveparticipation',
            name='misc_feedback',
            field=models.TextField(blank=True, help_text='Anything else you want to add? If you were spoiled, mention it here. (This can include: things you tried, any shortcuts you found, break-ins, stuck points, accessibility)', null=True),
        ),
        migrations.AddField(
            model_name='puzzleanswer',
            name='flexible',
            field=models.BooleanField(default=False, help_text='Whether or not this answer is easy to change and satisfy meta constraints.'),
        ),
        migrations.CreateModel(
            name='Act',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='round',
            name='act',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rounds', to='puzzle_editing.act'),
        ),
        migrations.AddField(
            model_name='supportrequest',
            name='assignees',
            field=models.ManyToManyField(blank=True, related_name='assigned_support_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='status',
            field=models.CharField(choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], default='II', max_length=2),
        ),
        migrations.AlterField(
            model_name='puzzleanswer',
            name='answer',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='puzzlecomment',
            name='status_change',
            field=models.CharField(blank=True, choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], help_text="Any status change caused by this comment. Only used for recording history and computing statistics; not a source of truth (i.e. the puzzle will still store its current status, and this field's value on any comment doesn't directly imply anything about that in any technically enforced way).", max_length=2),
        ),
        migrations.AlterField(
            model_name='statussubscription',
            name='status',
            field=models.CharField(choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], max_length=2),
        ),
        migrations.AddField(
            model_name='puzzleanswer',
            name='case_sensitive',
            field=models.BooleanField(default=False, help_text='Whether or not this answer needs to be submitted with the correct casing.'),
        ),
        migrations.AddField(
            model_name='puzzleanswer',
            name='whitespace_sensitive',
            field=models.BooleanField(default=False, help_text="Whether or not this answer shouldn't ignore whitespaces."),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='lead_author',
            field=models.ForeignKey(help_text='The author responsible for driving the puzzle forward and getting it over the finish line.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='led_puzzles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='flavor',
            field=models.TextField(blank=True, help_text="Puzzle flavor used by creative team to motivate round art, such as 'puzzle consists of performers swallowing swords' or 'puzzle is themed as a ride through a tunnel of love'."),
        ),
        migrations.RemoveField(
            model_name='puzzlepostprod',
            name='authors',
        ),
        migrations.RemoveField(
            model_name='puzzlepostprod',
            name='complicated_deploy',
        ),
        migrations.RemoveField(
            model_name='puzzlepostprod',
            name='zip_file',
        ),
        migrations.AddField(
            model_name='puzzle',
            name='flavor_approved_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='deep',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='discord_emoji',
            field=models.CharField(default=':question:', help_text="The emoji that'll be used in Discord notifications. Please leave in string form, e.g. :question:.", max_length=50),
        ),
        migrations.RemoveField(
            model_name='user',
            name='enable_keyboard_shortcuts',
        ),
        migrations.AddField(
            model_name='testsolveguess',
            name='partially_correct',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='puzzlepostprod',
            name='host_url',
            field=models.CharField(blank=True, help_text='The base URL where this puzzle is postprodded. Defaults to staging', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='puzzlecomment',
            name='is_feedback',
            field=models.BooleanField(default=False, help_text='Whether or not this comment is created as feedback from a testsolve session'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='hint',
            name='description',
            field=models.CharField(help_text='A description of when this hint should apply; e.g. "The solvers have not yet figured out that the mirrors represent word transformations"', max_length=1000),
        ),
        migrations.AlterUniqueTogether(
            name='hint',
            unique_together={('puzzle', 'description')},
        ),
        migrations.AddField(
            model_name='testsolveguess',
            name='partial_response',
            field=models.TextField(blank=True),
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', puzzle_editing.models.PuzzupUserManager()),
            ],
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='status',
            field=models.CharField(choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('NK', 'Needs Final Day Factcheck'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], default='II', max_length=2),
        ),
        migrations.AlterField(
            model_name='puzzlecomment',
            name='status_change',
            field=models.CharField(blank=True, choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('NK', 'Needs Final Day Factcheck'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], help_text="Any status change caused by this comment. Only used for recording history and computing statistics; not a source of truth (i.e. the puzzle will still store its current status, and this field's value on any comment doesn't directly imply anything about that in any technically enforced way).", max_length=2),
        ),
        migrations.AlterField(
            model_name='statussubscription',
            name='status',
            field=models.CharField(choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('NK', 'Needs Final Day Factcheck'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], max_length=2),
        ),
        migrations.CreateModel(
            name='PuzzleFactcheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_sheet_id', models.CharField(max_length=100)),
                ('output', models.TextField(blank=True)),
                ('puzzle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='factcheck', to='puzzle_editing.puzzle')),
            ],
        ),
        migrations.AddField(
            model_name='puzzle',
            name='canonical_puzzle',
            field=models.ForeignKey(blank=True, help_text="If you don't know what this is for, don't worry about it.", null=True, on_delete=django.db.models.deletion.SET_NULL, to='puzzle_editing.puzzle'),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='deep_key',
            field=models.CharField(blank=True, max_length=500, null=True, verbose_name='DEEP key'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='status',
            field=models.CharField(choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('NA', 'Needs Art Check'), ('NK', 'Needs Final Day Factcheck'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], default='II', max_length=2),
        ),
        migrations.AlterField(
            model_name='puzzlecomment',
            name='status_change',
            field=models.CharField(blank=True, choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('NA', 'Needs Art Check'), ('NK', 'Needs Final Day Factcheck'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], help_text="Any status change caused by this comment. Only used for recording history and computing statistics; not a source of truth (i.e. the puzzle will still store its current status, and this field's value on any comment doesn't directly imply anything about that in any technically enforced way).", max_length=2),
        ),
        migrations.AlterField(
            model_name='puzzlepostprod',
            name='slug',
            field=models.CharField(help_text="The part of the URL on the hunt site referrring to this puzzle. E.g. for https://puzzle.hunt/puzzle/fifty-fifty, this would be 'fifty-fifty'.", max_length=100, validators=[django.core.validators.RegexValidator(regex='[^<>#%"\\\'|{})(\\[\\]\\/\\\\\\^?=`;@&, ]{1,100}')]),
        ),
        migrations.AlterField(
            model_name='statussubscription',
            name='status',
            field=models.CharField(choices=[('II', 'Initial Idea'), ('AE', 'Awaiting Approval By EIC'), ('ND', 'EICs are Discussing'), ('WR', 'Waiting for Round to Open'), ('AR', 'Awaiting Input By Editor(s)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Editor Pre-testsolve'), ('T', 'Ready to be Testsolved'), ('TR', 'Awaiting Testsolve Review'), ('R', 'Revising (Needs Testsolving)'), ('RP', 'Revising (Done with Testsolving)'), ('AO', 'Awaiting Approval (Done with Testsolving)'), ('SS', 'Needs Solution Sketch'), ('NS', 'Needs Solution'), ('AS', 'Awaiting Solution and Hints Approval'), ('PB', 'Postproduction Blocked'), ('BT', 'Postproduction Blocked On Tech Request'), ('NP', 'Ready for Postprodding'), ('PP', 'Actively Postprodding'), ('AP', 'Awaiting Approval After Postprod'), ('NF', 'Needs Factcheck'), ('NR', 'Needs Final Revisions'), ('NC', 'Needs Copy Edits'), ('NA', 'Needs Art Check'), ('NK', 'Needs Final Day Factcheck'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], max_length=2),
        ),
        migrations.AddField(
            model_name='round',
            name='puzzle_template',
            field=models.CharField(blank=True, help_text='Path to puzzle template in the hunt repo for autopostprod', max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='round',
            name='solution_template',
            field=models.CharField(blank=True, help_text='Path to sol template in the hunt repo for autopostprod', max_length=500, null=True),
        ),
        migrations.CreateModel(
            name='PseudoAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(max_length=100)),
                ('response', models.TextField()),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pseudo_answers', to='puzzle_editing.puzzle')),
            ],
            options={
                'ordering': ['puzzle', 'answer'],
                'unique_together': {('puzzle', 'answer')},
            },
        ),
    ]
